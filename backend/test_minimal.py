#!/usr/bin/env python3
"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –±–µ–∑ –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
"""

print("üîç –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç...")

try:
    print("1. –ò–º–ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ Pydantic...")
    from pydantic import BaseModel, Field
    from datetime import date, datetime
    from typing import Optional
    print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤: {e}")
    exit(1)

try:
    print("2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π —Å—Ö–µ–º—ã...")
    class TestSchema(BaseModel):
        id: int
        name: str
        created_at: datetime
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
    test_instance = TestSchema(id=1, name="test", created_at=datetime.now())
    print(f"‚úÖ –ü—Ä–æ—Å—Ç–∞—è —Å—Ö–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: {test_instance.name}")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Å—Ç–æ–π —Å—Ö–µ–º—ã: {e}")
    exit(1)

try:
    print("3. –ò–º–ø–æ—Ä—Ç database –±–µ–∑ —Å—Ö–µ–º...")
    import sys
    if 'schemas' in sys.modules:
        del sys.modules['schemas']
    
    from database import Base, engine, SessionLocal, get_db
    print("‚úÖ –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã database –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ database: {e}")

print("\n‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
