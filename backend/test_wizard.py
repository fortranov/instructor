"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –º–∞—Å—Ç–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–æ–≤
"""

import requests
import json
from datetime import date, timedelta

# –ë–∞–∑–æ–≤—ã–π URL API
BASE_URL = "http://localhost:8000/api/v1"

def test_wizard_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç endpoint –º–∞—Å—Ç–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–æ–≤"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–æ–≤...")
    
    # –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –≤–æ–π—Ç–∏
    print("1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    register_data = {
        "email": "test_wizard@example.com",
        "password": "testpass123",
        "first_name": "Test",
        "last_name": "User"
    }
    
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        response = requests.post(f"{BASE_URL}/auth/register", json=register_data)
        if response.status_code == 201:
            print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
        elif response.status_code == 400 and "already registered" in response.text:
            print("‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {response.status_code} - {response.text}")
            return
        
        # –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
        print("2. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...")
        login_data = {
            "email": register_data["email"],
            "password": register_data["password"]
        }
        
        response = requests.post(f"{BASE_URL}/auth/login", json=login_data)
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {response.status_code} - {response.text}")
            return
        
        token_data = response.json()
        access_token = token_data["access_token"]
        print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É")
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å —Ç–æ–∫–µ–Ω–æ–º
        headers = {
            "Authorization": f"Bearer {access_token}",
            "Content-Type": "application/json"
        }
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ –ø–ª–∞–Ω–æ–≤
        print("3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ –ø–ª–∞–Ω–æ–≤...")
        
        # –î–∞—Ç–∞ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ 3 –º–µ—Å—è—Ü–∞
        competition_date = (date.today() + timedelta(days=90)).isoformat()
        
        wizard_data = {
            "weekly_distance": "10-30",
            "comfortable_pace": "6-7",
            "target_distance": "21k",
            "competition_date": competition_date,
            "has_specific_goal": True
        }
        
        response = requests.post(f"{BASE_URL}/plans/wizard", json=wizard_data, headers=headers)
        
        if response.status_code == 201:
            result = response.json()
            print("‚úÖ –ü–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ –º–∞—Å—Ç–µ—Ä!")
            print(f"   üìä –°–ª–æ–∂–Ω–æ—Å—Ç—å: {result['complexity']}")
            print(f"   üèÉ –¢–∏–ø —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è: {result['competition_type']}")
            print(f"   üìÖ –î–∞—Ç–∞ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è: {result['competition_date']}")
            print(f"   üÜî ID –ø–ª–∞–Ω–∞: {result['plan_id']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    test_wizard_endpoint()
