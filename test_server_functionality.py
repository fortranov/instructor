#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ –µ–≥–æ –∑–∞–ø—É—Å–∫–∞
"""

import sys
sys.path.append('./backend')

print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ backend...")

try:
    print("1. –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
    from backend.database import create_tables, get_db
    from backend.main import app
    from backend.schemas import WorkoutResponse, TrainingPlanCreate
    print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    exit(1)

try:
    print("2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    create_tables()
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {e}")

try:
    print("3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ö–µ–º...")
    from datetime import date, datetime
    
    # –¢–µ—Å—Ç WorkoutResponse
    workout_data = {
        "id": 1,
        "date": date.today(),
        "sport_type": "running",
        "duration_minutes": 60,
        "workout_type": "endurance",
        "is_completed": False
    }
    workout = WorkoutResponse(**workout_data)
    print(f"‚úÖ WorkoutResponse: {workout.sport_type}")
    
    # –¢–µ—Å—Ç TrainingPlanCreate
    plan_data = {
        "uin": "test_user",
        "complexity": 500,
        "competition_date": date.today(),
        "competition_type": "run_10k"
    }
    plan = TrainingPlanCreate(**plan_data)
    print(f"‚úÖ TrainingPlanCreate: {plan.competition_type}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ö–µ–º: {e}")

try:
    print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    routes = [route.path for route in app.routes if hasattr(route, 'path')]
    print(f"‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(routes)} –º–∞—Ä—à—Ä—É—Ç–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
    expected_routes = ['/api/v1/health', '/api/v1/plans/create', '/api/v1/auth/login']
    for route in expected_routes:
        if any(route in r for r in routes):
            print(f"‚úÖ –ú–∞—Ä—à—Ä—É—Ç –Ω–∞–π–¥–µ–Ω: {route}")
        else:
            print(f"‚ö†Ô∏è –ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: {route}")
            
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ FastAPI: {e}")

print("\nüéâ –¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!")
print("\nüìù –í—ã–≤–æ–¥—ã:")
print("‚úÖ –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ Pydantic —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã")
print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫") 
print("‚úÖ –°—Ö–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
print("‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
print("‚ö†Ô∏è –û—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ—Ä—Ç –∑–∞–Ω—è—Ç)")
print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É 8000")
